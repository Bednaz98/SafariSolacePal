{"version":3,"sources":["assets/Sale.png","SafariSolaceStyleTools/colorstyle.ts","classes-interfaces/app-context.tsx","SafariSolaceStyleTools/themecontext.tsx","SafariSolaceStyleTools/basicbutton.tsx","SafariSolaceStyleTools/basicinputtext.tsx","SafariSolaceStyleTools/basictext.tsx","SafariSolaceStyleTools/pixel-spacer.tsx","developer-styling-tools/ss-context.tsx","SafariSolaceStyleTools/get-style.tsx","SafariSolaceStyleTools/stylesheet.tsx","components/page/problem-report.tsx","components/page/reservation-homepage.tsx","components/children/nav-bar.tsx","classes-interfaces/localhandler.ts","classes-interfaces/http-handler.ts","SafariSolaceStyleTools/basicmodal.tsx","components/children/activity-item.tsx","components/page/activity-view.tsx","components/page/all-roomSrv-view.tsx","components/page/user-roomSrv.tsx","components/loadingScreen.tsx","SafariSolaceStyleTools/styleconfig.ts","components/page/login-page.tsx","App.tsx"],"names":["module","exports","Theme","Color","appContext","createContext","undefined","themeContext","theme","setTheme","GetColor","colorType","useContext","Text","Button","Modal","InputText","B","C","D","E","F","BasicButton","props","onPress","title","color","disabled","testID","key","BasicInputText","value","onChangeText","placeholder","Error","keyboardType","editable","onChange","nativeEvent","eventCount","target","text","onContentSizeChange","contentSize","width","height","TextInput","multiline","style","TextType","BasicText","type","General","PixelSpacer","minHeight","minWidth","maxHeight","maxWidth","View","defaultThemeStyle","StyleSheet","create","GetStyle","keys","ProblemReport","useState","viewState","setViewState","selectedFile","setSelectedFile","selectFile","a","async","DocumentPicker","pickerResult","SubmissionForm","problemDescription","setProblemDescription","textType","Title","desc","problem","id","submittedTime","status","formData","FormData","append","JSON","parse","stringify","name","uri","mimeType","fetch","method","body","response","photoLink","headers","alert","submitReport","ThankYouDisplay","ReservationHomePage","context","console","log","reservationData","userOfferings","room","Date","checkIn","toDateString","toLocaleTimeString","checkOut","NavBar","navFunc","flexDirection","alignSelf","LocalHandler","this","ServerReservationData","setReservationData","serverOfferings","ServerOfferingData","setServerOfferings","returnArray","length","setUserOfferings","index","newContext","slice","httpHandler","dev","useURL","mockURL","localHandler","devMode","axios","get","getURL","data","getRoomServiceRequests","serviceRequest","offerings","requestedOffering","request","post","patch","getReservations","reservation","setLocalReservation","getRoomOfferings","setLocalOfferings","BasicModal","child","openTitle","show","setShow","styles","modalView","flex","paddingHorizontal","margin","backgroundColor","borderRadius","padding","alignItems","shadowColor","shadowOffset","animationType","transparent","visible","onRequestClose","ActivityItem","startTime","endTime","location","ActivityView","handler","activitiesState","setActivitiesState","useEffect","getActivities","setter","activityItems","map","ScrollView","RoomServiceOfferings","localhandle","localhandler","orders","setOrders","getLocalOfferings","FlatList","keyExtractor","item","v4","renderItem","cost","currentRequests","getUserOfferings","push","addOffer","UserRoomServiceOrder","localHandle","itemIndex","requestedOfferings","splice","remove","LoadingScreen","ActivityIndicator","ReservationLogin","reservationID","setReservationID","firstTry","setFirstTry","setShowError","setIsLoading","HTTP","tryLoginHTTP","syncApp","setPage","TryLoginButton","Image","source","require","App","default","statetheme","pageIndex","setPageIndex","owner","setReservation","serverOfferingList","setServerOfferingList","userServerOffering","setUserServerOffering","initContext","availableActivities","setAvailableActivities","themeContextObject","ShowNavBar","HeightScale","Dimensions","WidthScale","justifyContent","Provider"],"mappings":"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","file":"static/js/app.907776fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sale.c1fdc2f5.png\";","import { useContext } from \"react\";\r\nimport { themeContext } from \"./themecontext\";\r\n\r\n\r\n\r\n\r\nexport enum Theme{\r\n    default,\r\n    other\r\n}\r\n\r\nexport enum Color{\r\n    Text,\r\n    Button,\r\n    Modal,\r\n    InputText,\r\n    B,\r\n    C,\r\n    D,\r\n    E,\r\n    F\r\n}\r\n\r\nexport default function GetColor(colorType:Color){\r\n    const context = useContext(themeContext);\r\n\r\n    switch(context.theme){\r\n        // case Theme.default:{\r\n        //     switch(colorType){\r\n        //         case Color.Text: { return ''}\r\n        //         case Color.Button: { return ''}\r\n        //         case Color.A: { return ''}\r\n        //         case Color.B: { return ''}\r\n        //         case Color.C: { return ''}\r\n        //         case Color.D: { return ''}\r\n        //         case Color.E: { return ''}\r\n        //         case Color.F: { return ''}\r\n        //         default:      { return ''}\r\n        //     }\r\n        // }\r\n        // case Theme.other:{\r\n        //     switch(colorType){\r\n        //         case Color.Text: { return ''}\r\n        //         case Color.Button: { return ''}\r\n        //         case Color.A: { return ''}\r\n        //         case Color.B: { return ''}\r\n        //         case Color.C: { return ''}\r\n        //         case Color.D: { return ''}\r\n        //         case Color.E: { return ''}\r\n        //         case Color.F: { return ''}\r\n        //         default:      { return ''}\r\n        //     }\r\n        // }\r\n        default:{\r\n            switch(colorType){\r\n                case Color.Text: { return ''}\r\n                case Color.Button: { return ''}\r\n                case Color.Modal: { return '#aaaaaa'}\r\n                case Color.InputText: { return '#aaaaaa'}\r\n                case Color.B: { return ''}\r\n                case Color.C: { return ''}\r\n                case Color.D: { return ''}\r\n                case Color.E: { return ''}\r\n                case Color.F: { return ''}\r\n                default:      { return ''}\r\n            }\r\n        }\r\n    }\r\n\r\n}","import React, { createContext, useContext } from \"react\";\r\nimport { Activity } from \"./activity\";\r\nimport Reservation from \"./Reservation\";\r\nimport { Offering, ServiceRequest } from \"./room-service\";\r\n\r\n\r\n\r\n\r\nexport interface AppContextInterface{\r\n    setPage:React.Dispatch<React.SetStateAction<number>>\r\n    reservationData:Reservation\r\n    setReservationData:React.Dispatch<React.SetStateAction<Reservation>>\r\n    serverOfferings:Offering[]\r\n    setServerOfferings:React.Dispatch<React.SetStateAction<Offering[]>>\r\n    userOfferings:ServiceRequest[]\r\n    setUserOfferings:React.Dispatch<React.SetStateAction<ServiceRequest[]>>\r\n    availableActivities:Activity[]\r\n    setAvailableActivities:React.Dispatch<React.SetStateAction<Activity[]>>\r\n}\r\n\r\n\r\n// const dummyReservation:Reservation = {\r\n//     id: \"\",\r\n//     checkIn: 0,\r\n//     checkOut: 1,\r\n//     owner: \"\",\r\n//     room: \"\"\r\n// }\r\n// const dummyOffering : Offering[]=\r\n// [{\r\n//     desc: \"pizza in bed\",\r\n//     cost: 12\r\n// }]\r\n\r\n// export const initContext: AppContextInterface = {\r\n//     reservationData: dummyReservation,\r\n//     setReservationData: () => { },\r\n//     serverOfferings: [],\r\n//     setServerOfferings: () => { },\r\n//     userOfferings: dummyOffering,\r\n//     setUserOfferings: () => { },\r\n//     availableActivities: [],\r\n//     setAvailableActivities: () => { },\r\n//     setPage:()=>{}\r\n// }\r\n\r\nexport const appContext = createContext(undefined);","import { createContext, useContext } from \"react\";\r\nimport { Theme } from \"./styleconfig\";\r\n\r\n\r\n\r\n/**this interface is used for intellisense for the 'Theme' useContext*/\r\nexport interface ThemeContextInterface{\r\n    theme:Theme\r\n    setTheme:Function\r\n}\r\n\r\nexport const themeContextObject:ThemeContextInterface = {theme:0, setTheme:()=>{}}\r\n\r\n/**This is the global 'Theme' context*/\r\nexport const themeContext = createContext(themeContextObject)","import React from \"react\";\r\nimport { Button, NativeSyntheticEvent, NativeTouchEvent, View } from \"react-native\";\r\nimport { v4 } from \"uuid\";\r\nimport GetColor, { Color } from \"./colorstyle\";\r\nimport GetStyle from \"./get-style\";\r\n\r\n\r\nexport default function BasicButton(props){\r\n    const {onPress, title} = props;\r\n\r\n    return(\r\n    // <View style={GetStyle(\"BasicButtonView\")}>\r\n        <Button onPress={props.onPress} title={ props.title} color={GetColor(Color.Button)} // << main propers here\r\n        //Extra attributes added\r\n        disabled = { props.disabled} key={props.key} testID={props.testID}\r\n        /*this is the close of the button tag*//> \r\n    // </View>\r\n    )\r\n}","import React from \"react\";\r\nimport { TextInput, View } from \"react-native\";\r\nimport GetColor, { Color } from \"./colorstyle\";\r\nimport GetStyle from \"./get-style\";\r\n\r\n\r\nexport default function BasicInputText(props){\r\n    const {value, onChangeText, placeholder} = props;\r\n    if(value === undefined){throw new Error('You did not pass a value into one of your input text, pass the useState read only value here')}\r\n    if(!onChangeText){throw new Error('You did not pass an onChangeText to one of your input text, pass the useState function here ')}\r\n    if(!placeholder){throw new Error('You did not put a placeholder into one of your input text, please add a default value that describes what the field will be used for')}\r\n    const keyboardType = props?.keyboardType ?? 'default';\r\n    const editable = props?.editable ?? true;\r\n    const onChange = props?.onChange ?? ( ({ nativeEvent: { eventCount, target, text} }) => {} ) ;\r\n    const onContentSizeChange = props?.onContentSizeChange ?? ( ({ nativeEvent: { contentSize: { width, height } } }) => {} );\r\n\r\n    return(<>\r\n    {/* <View style={{backgroundColor:GetColor(Color.InputText), padding:3}}>  */}\r\n        <TextInput multiline={true} style={props.style} value={value} onChangeText={onChangeText} placeholder={placeholder} \r\n        keyboardType='default' editable={editable} onChange={onChange} onContentSizeChange={onContentSizeChange}/>\r\n    {/* </View> */}\r\n    </>)\r\n}\r\n","import React from 'react'\r\nimport { View,Text } from 'react-native'\r\nimport GetColor, { Color } from './colorstyle'\r\nimport GetStyle from './get-style'\r\n\r\n\r\n\r\n\r\n/** the only required prop, @attribute 'text', optionally @Attribute'textType' of type 'TextType' can be included for specifying extra styling options*/\r\nexport default function BasicText(props){\r\n    const {text} = props\r\n    if(!text){throw new Error('You did not pass a text value into one of your text')}\r\n    //This will grab from the props the type of text for styling\r\n    // is not found, it will default to general text\r\n    const textType:TextType = props?.type ?? TextType.General\r\n    let textColor = Color.Text\r\n    // switch(textType){\r\n    //     case TextType.General:{textColor =Color.Text ;   ;break }\r\n    //     case TextType.Header:{textColor =Color.textHeader;  ; break}\r\n    //     case TextType.Title:{textColor =Color.textTitle ; ;break}\r\n    // }\r\n    return (\r\n    <Text style={props.style}>{text}</Text>)\r\n}\r\n\r\n\r\n\r\n/**The type */\r\nexport enum TextType{\r\n    Title,\r\n    Header,\r\n    General\r\n}\r\nfunction getTextStyle(textType:TextType){\r\n    switch(textType){\r\n    case TextType.Title  :  {return { fontSize:70}}\r\n    case TextType.Header :  {return {fontSize:40}}\r\n    case TextType.Header :  {return {fontSize:20}}\r\n    // The default case should be exactly the same as the general text as an edge case\r\n    default              :  {return {fontSize:20}}\r\n    //=================================================================================\r\n    }\r\n}","import React from \"react\"\r\nimport { View } from \"react-native\"\r\n\r\n\r\n/**this is a component for spacing elements with absolute pixels. @attribute height, width will default to 0. others include minWidth, maxWidth, minHight, maxHight*/\r\nexport default function PixelSpacer(props){\r\n    const height = props?.height ?? 0\r\n    const width = props?.width ?? 0\r\n    const {minHeight,minWidth,maxHeight,maxWidth} = props\r\n\r\n\r\n    return(<View style={{height:height, width:width, minHeight, minWidth, maxHeight, maxWidth}}/>)\r\n}","import { createContext} from \"react\";\r\nimport { ssKeysInterface } from \"./ss-style-keys\";\r\n\r\nexport interface ssContextInterface{  \r\n    styleContextObject: ssKeysInterface\r\n    setStyleContextObject: Function\r\n    setByKey: Function\r\n    getByKey: Function\r\n}\r\n\r\n// ssContextInit\r\nexport const ssContext = createContext(undefined)\r\n\r\n\r\n\r\ninterface stylePropsView{\r\n    backgroundColor: string\r\n    borderColor: string\r\n    borderRadius: number\r\n    borderWidth: number\r\n    opacity: number\r\n    height: number\r\n    width: number\r\n    paddingVertical: number\r\n    paddingHorizontal: number\r\n    justifyContent: string\r\n    alignContent: string\r\n    alignItems: string \r\n    alignSelf: string\r\n}\r\n\r\nexport interface stylePropsText{\r\n    color: string //could use background color?\r\n    fontFamily: string\r\n    fontSize: number\r\n    letterSpacing: number\r\n    lineHeight: number\r\n    textAlign: string\r\n    opacity: number\r\n    textShadowColor: string\r\n    textShadowOffset: object //{width, height}\r\n    textShadowRadius: number\r\n}\r\n","import { useContext } from \"react\";\r\nimport { ssStyleSheet } from \"../developer-styling-tools/ss-stylesheet\";\r\nimport { coolTheme, defaultThemeStyle } from \"./stylesheet\";\r\nimport { themeContext } from \"./themecontext\";\r\n\r\nexport enum Theme{\r\n    default,\r\n    other,\r\n    theme2\r\n}\r\n\r\n/** Get the style based off of a ID key. The styles can represent an ID (like a 'syncButton' style), or a UI type (like a 'Text' style)\r\n * @param keys The key representing the type of style desired, based off of the ss-style-keys\r\n */\r\nexport default function GetStyle(keys: string){\r\n    //console.log(\"GET STYLES CALLED\")\r\n\r\n    const developermode: boolean = false\r\n\r\n    if (developermode){\r\n        return ssStyleSheet(keys)\r\n    }\r\n    else{\r\n        const themes = useContext(themeContext)\r\n        switch (themes.theme){\r\n            //case (Theme.other) : return coolTheme[keys]\r\n            default: return defaultThemeStyle[keys]\r\n        }\r\n    }\r\n}\r\n","import { StyleSheet, Dimensions } from \"react-native\";\r\n\r\nexport const defaultThemeStyle = StyleSheet.create({\r\n    \"MainView\": {\r\n        \"flex\": 1,\r\n        \"backgroundColor\": \"black\",\r\n        \"borderColor\": \"black\",\r\n        \"opacity\": .8,\r\n        \"flexDirection\": \"column\",\r\n        \"width\": \"100%\",\r\n        \"height\": \"100%\",\r\n        \"paddingTop\": 10,\r\n        \"paddingHorizontal\": 0,\r\n        \"justifyContent\": \"flex-start\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 12,\r\n        \"borderRadius\": 0\r\n      },\r\n      \"NavView\": {\r\n        \"flex\": .15,\r\n        \"backgroundColor\": \"black\",\r\n        \"borderColor\": \"black\",\r\n        \"opacity\": 0.8,\r\n        \"flexDirection\": \"column-reverse\",\r\n        \"width\": \"100%\",\r\n        \"height\": \"27%\",\r\n        \"paddingVertical\": 0,\r\n        \"paddingHorizontal\": 0,\r\n        \"justifyContent\": \"flex-end\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 12,\r\n        \"borderRadius\": 52\r\n      },\r\n      \"InfoView\": {},\r\n      \"BasicText\": {\r\n        \"textAlignVertical\": \"center\",\r\n        \"flex\": .07,\r\n        \"flexWrap\": \"wrap\",\r\n        \"flexGrow\": .3,\r\n        \"color\": \"white\",\r\n        \"backgroundColor\": \"black\",\r\n        \"fontSize\": 20,\r\n        \"fontFamily\": \"serif\",\r\n        \"textAlign\": \"center\",\r\n        \"letterSpacing\": 10,\r\n        \"lineHeight\": 22,\r\n        \"textShadowColor\": \"white\",\r\n        \"textShadowRadius\": 13,\r\n        \"borderColor\": \"white\",\r\n        \"opacity\": .8,\r\n        \"width\": \"100%\",\r\n        \"height\": \"15%\",\r\n        \"paddingTop\": 10,\r\n        \"paddingHorizontal\": 10,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 10,\r\n        \"borderRadius\": 50\r\n      },\r\n      \"OfferingsText\": {\r\n        \"flex\": .2,\r\n        \"flexGrow\": .3,\r\n        \"flexBasis\": \"100%\",\r\n        \"color\": \"white\",\r\n        \"backgroundColor\": \"black\",\r\n        \"fontSize\": 15,\r\n        \"fontFamily\": \"serif\",\r\n        \"textAlign\": \"center\",\r\n        \"letterSpacing\": 10,\r\n        \"lineHeight\": 25,\r\n        \"textShadowColor\": \"white\",\r\n        \"textShadowRadius\": 13,\r\n        \"borderColor\": \"white\",\r\n        \"opacity\": .8,\r\n        \"width\": \"100%\",\r\n        \"height\": \"15%\",\r\n        \"paddingTop\": 20,\r\n        \"paddingHorizontal\": 4,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"space-around\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 10,\r\n        \"borderRadius\": 50\r\n      },\r\n      \"TitleText\": {\r\n        \"textAlignVertical\": \"center\",\r\n        \"flex\": .20,\r\n        \"flexShrink\": 2,\r\n        \"color\": \"black\",\r\n        \"backgroundColor\": \"#2D63C8\",\r\n        \"fontSize\": 25,\r\n        \"fontFamily\": \"serif\",\r\n        \"textAlign\": \"center\",\r\n        \"letterSpacing\": 10,\r\n        \"lineHeight\": 45,\r\n        \"textShadowColor\": \"white\",\r\n        \"textShadowRadius\": 13,\r\n        \"borderColor\": \"white\",\r\n        \"opacity\": 1,\r\n        \"width\": \"100%\",\r\n        \"height\": \"25%\",\r\n        \"paddingVertical\": 15,\r\n        \"paddingHorizontal\": 10,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 10,\r\n        \"borderRadius\": 50\r\n      },\r\n      \"Modal\": {},\r\n      \"MenuButton\": {},\r\n      \"SyncButton\": {},\r\n      \"InfoText\": {},\r\n      \"titleText\": {},\r\n      \"BasicButtonView\": {},\r\n      \"BasicInputText\": {\r\n        \"flex\": .2,\r\n        \"color\": \"black\",\r\n        \"backgroundColor\": \"#2D63C8\",\r\n        \"fontSize\": 30,\r\n        \"fontFamily\": \"serif\",\r\n        \"textAlign\": \"center\",\r\n        \"letterSpacing\": 0,\r\n        \"lineHeight\": 8,\r\n        \"textShadowColor\": \"white\",\r\n        \"textShadowRadius\": 12,\r\n        \"borderColor\": \"white\",\r\n        \"opacity\": 1,\r\n        \"width\": \"80%\",\r\n        \"height\": \"21%\",\r\n        \"paddingVertical\": 10,\r\n        \"paddingHorizontal\": 0,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 10,\r\n        \"borderRadius\": 50\r\n      },\r\n      \"ProblemTextInput\": {\r\n        \"flex\": .9,\r\n        \"flexDirection\": \"column\",\r\n        \"flexWrap\": 'wrap',\r\n        \"color\": \"black\",\r\n        \"backgroundColor\": \"#2D63C8\",\r\n        \"fontSize\": 30,\r\n        \"fontFamily\": \"serif\",\r\n        \"textAlign\": \"center\",\r\n        \"letterSpacing\": 0,\r\n        \"lineHeight\": 35,\r\n        \"textShadowColor\": \"white\",\r\n        \"textShadowRadius\": 12,\r\n        \"borderColor\": \"white\",\r\n        \"opacity\": 1,\r\n        \"width\": \"100%\",\r\n        \"height\": \"40%\",\r\n        \"paddingVertical\": 10,\r\n        \"paddingHorizontal\": 15,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 10,\r\n        \"borderRadius\": 20\r\n      },\r\n      \"LoginButtonView\": {\r\n        \"flex\": .2,\r\n        \"flexGrow\": .3,\r\n        \"backgroundColor\": \"#2D63C8\",\r\n        \"borderColor\": \"white\",\r\n        \"opacity\": 1,\r\n        \"flexDirection\": \"column\",\r\n        \"width\": \"50%\",\r\n        \"height\": \"30%\",\r\n        \"paddingVertical\": 0,\r\n        \"paddingHorizontal\": 10,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 10,\r\n        \"borderRadius\": 50\r\n      },\r\n      \"ReservationInfoView\": {\r\n        \"flex\": 1,\r\n        \"backgroundColor\": \"#2D63C8\",\r\n        \"borderColor\": \"white\",\r\n        \"opacity\": 1,\r\n        \"flexDirection\": \"column\",\r\n        \"width\": \"100%\",\r\n        \"height\": \"30%\",\r\n        \"paddingVertical\": 0,\r\n        \"paddingHorizontal\": 0,\r\n        \"justifyContent\": \"space-around\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 10,\r\n        \"borderRadius\": 50\r\n    },\r\n    \"FlatlistView\": {\r\n        \"flex\": .8,\r\n        \"backgroundColor\": \"#2D63C8\",\r\n        \"borderColor\": \"white\",\r\n        \"opacity\": 1,\r\n        \"flexDirection\": \"column\",\r\n        \"width\": \"100%\",\r\n        \"height\": \"70%\",\r\n        \"paddingVertical\": 10,\r\n        \"paddingHorizontal\": 10,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 10,\r\n        \"borderRadius\": 50\r\n    }\r\n      \r\n})\r\n\r\nexport const coolTheme = StyleSheet.create({\r\n    \"MainView\": {\r\n        \"backgroundColor\": \"grey\",\r\n        \"borderColor\": \"black\",\r\n        \"opacity\": 1,\r\n        \"width\": 647,\r\n        \"height\": 460,\r\n        \"paddingVertical\": 0,\r\n        \"paddingHorizontal\": 0,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 0,\r\n        \"borderRadius\": 112\r\n      },\r\n      \"NavView\": {\r\n        \"backgroundColor\": \"grey\",\r\n        \"borderColor\": \"black\",\r\n        \"opacity\": 1,\r\n        \"width\": \"100%\",\r\n        \"height\": \"100%\",\r\n        \"paddingVertical\": 0,\r\n        \"paddingHorizontal\": 0,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\",\r\n        \"borderWidth\": 0,\r\n        \"borderRadius\": 0\r\n      },\r\n      \"InfoView\": {},\r\n      \"Text\": {\r\n        \"color\": \"#66B032\",\r\n        \"backgroundColor\": \"grey\",\r\n        \"fontSize\": 30,\r\n        \"fontFamily\": \"serif\",\r\n        \"textAlign\": \"center\",\r\n        \"letterSpacing\": 10,\r\n        \"lineHeight\": 50,\r\n        \"textShadowColor\": \"#663300\",\r\n        \"textShadowRadius\": 6,\r\n        \"borderColor\": \"black\",\r\n        \"opacity\": 1,\r\n        \"width\": 527,\r\n        \"height\": 80,\r\n        \"paddingVertical\": 0,\r\n        \"paddingHorizontal\": 0,\r\n        \"justifyContent\": \"center\",\r\n        \"alignContent\": \"center\",\r\n        \"alignItems\": \"center\",\r\n        \"alignSelf\": \"center\"\r\n      },\r\n      \"TitleText\": {},\r\n      \"Modal\": {},\r\n      \"MenuButton\": {},\r\n      \"SyncButton\": {},\r\n      \"InfoText\": {},\r\n      \"titleText\": {}\r\n      \r\n})\r\n\r\n\r\n// \"MainView\": {\r\n//     \"backgroundColor\": \"grey\",\r\n//     \"borderColor\": \"#663300\",\r\n//     \"opacity\": 1,\r\n//     \"width\": 500,\r\n//     \"height\": 273,\r\n//     \"paddingVertical\": 147,\r\n//     \"paddingHorizontal\": 0,\r\n//     \"justifyContent\": \"center\",\r\n//     \"alignContent\": \"center\",\r\n//     \"alignItems\": \"center\",\r\n//     \"alignSelf\": \"center\",\r\n//     \"borderWidth\": 14,\r\n//     \"borderRadius\": 44\r\n//   },\r\n//   \"NavView\": {\r\n//     \"backgroundColor\": \"grey\",\r\n//     \"borderColor\": \"black\",\r\n//     \"opacity\": 1,\r\n//     \"width\": 320,\r\n//     \"height\": 100,\r\n//     \"paddingVertical\": 0,\r\n//     \"paddingHorizontal\": 0,\r\n//     \"justifyContent\": \"center\",\r\n//     \"alignContent\": \"center\",\r\n//     \"alignItems\": \"center\",\r\n//     \"alignSelf\": \"center\",\r\n//     \"borderWidth\": 0,\r\n//     \"borderRadius\": 0\r\n//   },\r\n//   \"InfoView\": {},\r\n//   \"Text\": {\r\n//     \"color\": \"#663300\",\r\n//     \"backgroundColor\": \"#2D63C8\",\r\n//     \"fontSize\": 15,\r\n//     \"fontFamily\": \"serif\",\r\n//     \"textAlign\": \"center\",\r\n//     \"letterSpacing\": 0,\r\n//     \"lineHeight\": 24,\r\n//     \"borderColor\": \"black\",\r\n//     \"opacity\": 1,\r\n//     \"width\": 380,\r\n//     \"height\": 53,\r\n//     \"paddingVertical\": 0,\r\n//     \"paddingHorizontal\": 0,\r\n//     \"justifyContent\": \"center\",\r\n//     \"alignContent\": \"center\",\r\n//     \"alignItems\": \"center\",\r\n//     \"alignSelf\": \"center\",\r\n//     \"borderWidth\": 7,\r\n//     \"borderRadius\": 4\r\n//   },\r\n//   \"TitleText\": {},\r\n//   \"Modal\": {},\r\n//   \"MenuButton\": {},\r\n//   \"SyncButton\": {},\r\n//   \"InfoText\": {},\r\n//   \"titleText\": {}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport BasicButton from \"../../SafariSolaceStyleTools/basicbutton\";\r\nimport BasicInputText from \"../../SafariSolaceStyleTools/basicinputtext\";\r\nimport BasicText, { TextType } from \"../../SafariSolaceStyleTools/basictext\";\r\nimport PixelSpacer from \"../../SafariSolaceStyleTools/pixel-spacer\";\r\nimport * as DocumentPicker from 'expo-document-picker';\r\nimport Problem from \"../../classes-interfaces/problem\";\r\nimport GetStyle from \"../../SafariSolaceStyleTools/get-style\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function ProblemReport(){\r\n\r\n    const [viewState, setViewState] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n\r\n    async function selectFile(){\r\n        const pickerResult: DocumentPicker.DocumentResult = await DocumentPicker.getDocumentAsync();\r\n        if(pickerResult.type !== 'cancel'){\r\n            setSelectedFile(pickerResult);\r\n        }\r\n    }\r\n    \r\n    async function submitReport(desc: string){\r\n\r\n        const problem: Problem = {\r\n            id: \"\",\r\n            submittedTime: 0,\r\n            desc: desc,\r\n            status: \"Unreviewed\",\r\n        }\r\n\r\n        try {\r\n            if(selectedFile){\r\n                const formData = new FormData();\r\n                formData.append('myFile', JSON.parse(JSON.stringify({\r\n                    name: selectedFile.name,\r\n                    uri: selectedFile.uri,\r\n                    type: selectedFile.mimeType\r\n                })))\r\n                const response = await fetch('http://8f75-209-159-236-212.ngrok.io/upload', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                })\r\n                problem.photoLink = await response.text();\r\n                setSelectedFile(null);\r\n            }\r\n\r\n            const response = await fetch('https://safarisolaceproblem.azurewebsites.net/api/ProblemIngestion?', {\r\n                method: 'POST',\r\n                body: JSON.stringify(problem),\r\n                headers: {\r\n                    'content-type':\"application/json\"\r\n                }\r\n            })\r\n\r\n            if(response.status === 200){\r\n                alert(\"Problem Submitted Successfully\");\r\n            } else {\r\n                alert(\"THERE WAS AN ERROR SUBMITTING PROBLEM!\")\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            // probably just ignore this and let the user think everything worked\r\n        }\r\n        setViewState(true)\r\n    }\r\n\r\n    function SubmissionForm(){\r\n        const [problemDescription, setProblemDescription] = useState('');\r\n\r\n        return(\r\n            <>\r\n                {/* <PixelSpacer width={400}/> */}\r\n                <BasicText text={\"Submit a Problem\"} textType = {TextType.Title}/>\r\n                {/* <PixelSpacer height={5}/> */}\r\n                <BasicInputText style={GetStyle(\"ProblemTextInput\")} value ={problemDescription} onChangeText={setProblemDescription} placeholder={'Problem description'}/>\r\n                <PixelSpacer height={5}/>\r\n                {!selectedFile ? <BasicButton onPress={selectFile} title={'Attach Image'}/> : <BasicButton onPress={()=>{setSelectedFile(null)}} title={'Un-Attach Image'}/>}\r\n                {/* {selectedFile ?? <BasicText text={`Selected File: ${selectedFile.name}`}/>} */}\r\n                <BasicButton onPress={()=>{submitReport(problemDescription)}} title={'Submit form!'} />\r\n            </>)\r\n    }\r\n\r\n    function ThankYouDisplay(){\r\n        return(\r\n        <>\r\n            <BasicText style={GetStyle(\"BasicText\")} text={'Thank you for letting us know'} textType = {TextType.Title}/>\r\n            <BasicText style={GetStyle(\"BasicText\")} text={'Your report has been sent to a manager for review. We hope to fix any inconvenience as soon as possible.'} textType = {TextType.Title}/>\r\n            <BasicButton title={\"Submit another problem?\"} onPress={()=>{setViewState(false)}}/>\r\n        </>)\r\n    }\r\n\r\n    function SwitchState( ){\r\n        if(viewState){ return <ThankYouDisplay/>}\r\n        else{ return <SubmissionForm/> }\r\n    }\r\n\r\n    return(\r\n        // <View style={{flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\r\n            <View style={GetStyle('MainView')}><SwitchState/></View>\r\n        // </View>\r\n    \r\n    )\r\n}\r\n\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { appContext, AppContextInterface } from \"../../classes-interfaces/app-context\";\r\nimport BasicText from \"../../SafariSolaceStyleTools/basictext\";\r\nimport GetStyle from \"../../SafariSolaceStyleTools/get-style\";\r\n\r\n\r\nexport default function ReservationHomePage(){\r\n\r\n    const context = useContext(appContext);\r\n    console.log(\"🚀 ~ file: reservation-homepage.tsx ~ line 9 ~ ReservationHomePage ~ context\", context)\r\n    console.log(\"🚀 ~ file: reservation-homepage.tsx ~ line 9 ~ ReservationHomePage ~ context.reservationdata ID\", context.reservationData.id)\r\n    console.log(\"🚀 ~ file: reservation-homepage.tsx ~ line 9 ~ ReservationHomePage ~ context offerings by id\", context.userOfferings)\r\n\r\n    function GetRoomName(){\r\n        //const context = useContext(appContext);\r\n        //console.log(\"🚀 ~ file: reservation-homepage.tsx ~ line 15 ~ GetRoomName ~ context\", context.reservationData.Reservation.room)\r\n        return(\r\n        <>\r\n            <BasicText style={GetStyle(\"BasicText\")}text={\"Room Name: \"}/>\r\n            <BasicText style={GetStyle(\"BasicText\")}text={context.reservationData.room ?? 'N/A'}/>\r\n        </>)\r\n    }\r\n    function GetCheckingInTime(){\r\n        //const context = useContext(appContext);\r\n        return(\r\n            <>\r\n                <BasicText style={GetStyle(\"BasicText\")}text={\"Check In Time: \"}/>\r\n                <BasicText style={GetStyle(\"BasicText\")}text={(`${ (new Date(context.reservationData.checkIn ?? 'N/A')) .toDateString()} At: ${(new Date(context.reservationData.checkIn ?? 'N/A')).toLocaleTimeString() }`)}/>\r\n            </>)\r\n    }\r\n    function GetCheckingOutTime(){\r\n        //const context = useContext(appContext);\r\n        return(\r\n            <>\r\n                <BasicText style={GetStyle(\"BasicText\")}text={\"Check Out Time: \"}/>\r\n                <BasicText style={GetStyle(\"BasicText\")}text={(`${(new Date(context.reservationData.checkOut ?? 'N/A')).toDateString()} At: ${(new Date(context.reservationData.checkOut ?? \"N/A\")).toLocaleTimeString() }`)}/>\r\n            </>)\r\n    }\r\n    function GetReservationID(){\r\n        //const context = useContext(appContext);\r\n        return(\r\n            <>\r\n                <BasicText style={GetStyle(\"BasicText\")}text={\"Reservation ID:  \"}/>\r\n                <BasicText style={GetStyle(\"BasicText\")}text={(context.reservationData.id ?? 'N/A')}/>\r\n            </>)\r\n    }\r\n    return(\r\n    <View style={GetStyle(\"ReservationInfoView\")}>\r\n        <GetRoomName />\r\n        <GetReservationID/>\r\n        <GetCheckingInTime/>\r\n        <GetCheckingOutTime/>\r\n    </View>)\r\n\r\n}","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport BasicButton from \"../../SafariSolaceStyleTools/basicbutton\";\r\nimport GetStyle from \"../../SafariSolaceStyleTools/get-style\";\r\n\r\n\r\n\r\n\r\nexport default function NavBar(props){\r\n    const navFunc:Function = props.navFunc\r\n\r\n    return(\r\n    <View style={GetStyle(\"NavView\")}>\r\n        <View style={{flexDirection:'row'}}>\r\n            <BasicButton title={\"Reservation\"} onPress={()=>navFunc(1)} />\r\n            <BasicButton title={\"Your Orders\"} onPress={()=>navFunc(2)} />\r\n            <BasicButton title={\"Room Service\"} onPress={()=>navFunc(3)} />\r\n        </View>\r\n    \r\n        <View style={{flexDirection:'row', alignSelf:'center'}}>\r\n            <BasicButton title={\"Events\"} onPress={()=>navFunc(4)} />\r\n            <BasicButton title={\"Report a Problem\"} onPress={()=>navFunc(5)} />\r\n        </View>\r\n    </View>)\r\n}","import { useContext } from \"react\";\r\nimport { appContext, AppContextInterface } from \"./app-context\";\r\nimport LocalHandlerInterface from \"./local-h-interface\";\r\nimport Reservation from \"./Reservation\";\r\nimport { Offering, ServiceRequest } from \"./room-service\";\r\n\r\n\r\nexport default class LocalHandler implements LocalHandlerInterface{\r\n    private context = useContext(appContext)\r\n    constructor(){}\r\n    getLocalReservation(): Reservation {\r\n        return this.context.reservationData\r\n    }\r\n    setLocalReservation(ServerReservationData: Reservation): boolean {\r\n        this.context.setReservationData(ServerReservationData);\r\n        return true;\r\n    }\r\n    getLocalOfferings(): Offering[] {\r\n        if(this.context.serverOfferings){return this.context.serverOfferings}\r\n        else return []\r\n    }\r\n    setLocalOfferings(ServerOfferingData: Offering[]): boolean {\r\n        this.context.setServerOfferings(ServerOfferingData)\r\n        return true\r\n    }\r\n\r\n    getUserOfferings(): Offering[] {\r\n        const returnArray:Offering[] = this.context.userOfferings;\r\n        //console.log(\"🚀 ~ file: localhandler.ts ~ line 29 ~ LocalHandler ~ getUserOfferings ~ returnArray\", returnArray)\r\n        if(returnArray?.length > 0) {return returnArray}\r\n        else return []\r\n    }\r\n    setUserOfferings(ServerOfferingData: Offering[]): boolean {\r\n        this.context.setUserOfferings(ServerOfferingData)\r\n        return true\r\n    }\r\n    deleteUserOffering(index: number): boolean {\r\n        const deleteContext: Offering[] = this.context.userOfferings\r\n        const newContext = deleteContext.slice(index, 1)\r\n        this.context.setUserOfferings(newContext)\r\n        return (true)\r\n    }\r\n\r\n}","import { useContext } from \"react\";\r\nimport { appContext, AppContextInterface } from \"./app-context\";\r\nimport LocalHandlerInterface from \"./local-h-interface\";\r\nimport LocalHandler from \"./localhandler\";\r\nimport axios from \"axios\"\r\nimport { Activity } from \"./activity\";\r\nimport Reservation from \"./Reservation\";\r\nimport { Offering, ServiceRequest } from \"./room-service\";\r\n\r\nexport interface httphandlerInterface{\r\n\r\n    /** Get all information for the user's reservation by RESERVATION id */\r\n    getReservations(id: string): Promise<Reservation>\r\n\r\n    /** See all activities which are available.\r\n     * @param id If an optional ID is supplied, the acitivities for just the user will be fetched, otherwise all activities will be fetched\r\n     */\r\n    getActivities(id?: string) : Promise< Activity | Activity[] >\r\n\r\n    /** Get all room offerings\r\n     * @param id ID of the SERVICE REQUEST. If included as an arguement, this will get offerings for only this user\r\n     */\r\n    getRoomOfferings(id? : string): Promise< Offering[] | ServiceRequest>\r\n\r\n    /** get all room service requests available \r\n     * @param id Optional: Will return only services that the user has requested\r\n    */\r\n    getRoomServiceRequests(id? : string): Promise<ServiceRequest | ServiceRequest[] >\r\n\r\n    /** Create or delete a service request for this user */\r\n    postServiceRequest(request: ServiceRequest): Promise<boolean>\r\n    cancelServiceRequest(request: ServiceRequest): Promise<any> \r\n\r\n    /** Sync front and backend by fetching backend data and updating local context */\r\n    syncApp(id:string) : Promise<boolean>\r\n}\r\n\r\n//const context: AppContextInterface = useContext(appContext)\r\n\r\nexport default class httpHandler implements httphandlerInterface{\r\n\r\n    /////////////////////////////////////////////\r\n    private useURL:string = \"http://20.124.74.192:3000\";\r\n    private mockURL: string = \"https://319a8c0f-ef79-4712-9143-a05d5c7a379c.mock.pstmn.io\"\r\n    private devMode:boolean;\r\n    private localHandler: LocalHandlerInterface = new LocalHandler();\r\n\r\n    \r\n    /**this function returns the URL to work with, if devMod is set to false, \r\n    * it will return the production URL, if true, it will return 'http//localhost:[port]'*/\r\n    private getURL(){\r\n        if(this.devMode){ return `https://319a8c0f-ef79-4712-9143-a05d5c7a379c.mock.pstmn.io`} //postman mock\r\n        else {return  this.useURL} \r\n    }\r\n\r\n    //https://c694890a-a61f-4a7d-b7d5-10d29c28c10c.mock.pstmn.io old postman\r\n\r\n    //constructor\r\n    constructor(dev:boolean){\r\n        this.devMode=dev;\r\n        //console.log(\"🚀 ~ file: http-handler.ts ~ line 56 ~ httpHandler ~ constructor ~ this.devMode\", this.devMode)\r\n        \r\n    }\r\n    //////////////////////////////////////////////\r\n\r\n    /** get a reservation by ID */\r\n    async getReservations(id: string){\r\n        const response = await axios.get(`${this.getURL()}/reservations/:${id}`);\r\n        const data: Reservation = response.data; //doing this will not actually enforce a type. The actual response type could be different\r\n        return data;\r\n    }\r\n\r\n    async getActivities(id?: string): Promise< Activity | Activity[] > {\r\n        let response: any\r\n        if (id) {\r\n            response = await axios.get(`${this.getURL()}/activities/:${id}`)\r\n            let data = response.data as Activity\r\n            return data\r\n        } \r\n        else {\r\n            response = await axios.get(`${this.getURL()}/activities`);\r\n            let data = response.data as Activity[] \r\n            return data\r\n        }\r\n    }\r\n\r\n    async getRoomOfferings(id? : string): Promise<Offering[]> {\r\n        if (id){\r\n            const serviceRequest = await this.getRoomServiceRequests(id)\r\n            const offerings = serviceRequest as ServiceRequest\r\n            //console.log(\"🚀 ~ file: http-handler.ts ~ line 88 ~ httpHandler ~ getRoomOfferings ~ offerings\", offerings.requestedOffering)\r\n\r\n            return offerings.requestedOffering\r\n        }\r\n        else{\r\n            const response = await axios.get(`${this.getURL()}/offerings`)\r\n            const offerings = response.data as Offering[]\r\n            return offerings\r\n        } \r\n    }\r\n\r\n    async getRoomServiceRequests(id : string): Promise< ServiceRequest | ServiceRequest[]> {\r\n        let response: any\r\n        if (id) {\r\n            response = await axios.get(`${this.getURL()}/servicerequests/:${id}`)\r\n            //console.log(\"🚀 ~ file: http-handler.ts ~ line 103 ~ httpHandler ~ getRoomServiceRequests ~ response\", response)\r\n            const data = response.data as ServiceRequest; \r\n            return data;\r\n        } \r\n        else {\r\n            response = await axios.get(`${this.getURL()}/servicerequests`) \r\n            const data = response.data as ServiceRequest[]; \r\n            return data;\r\n        }\r\n    }\r\n\r\n    /** The arguement 'request' taken here must be the service request with the requestedOfferings property ALREADY altered */\r\n    async postServiceRequest(request: ServiceRequest): Promise<boolean> {\r\n        try {\r\n            await axios.post(`${this.getURL()}/servicerequests`, request)\r\n            return true\r\n        }\r\n        catch {return false}   \r\n    }\r\n\r\n    async cancelServiceRequest(request: ServiceRequest): Promise<any> {\r\n        //fetcher...\r\n        const response = await axios.patch(`${this.getURL()}/servicerequests`, request)\r\n        const data = response.data \r\n        this.localHandler.setUserOfferings(data)\r\n        return (response)\r\n    }\r\n\r\n\r\n    async syncApp(id:string){\r\n        //get-n-set\r\n        const reservation = await this.getReservations(id)\r\n        this.localHandler.setLocalReservation(reservation)\r\n        this.localHandler.setLocalOfferings(await this.getRoomOfferings())\r\n        this.localHandler.setUserOfferings(await this.getRoomOfferings(reservation.room)) //get offerings by room\r\n        return (true)\r\n    }\r\n} \r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Modal, View,StyleSheet, Button } from \"react-native\";\r\nimport BasicButton from \"./basicbutton\";\r\nimport BasicText from \"./basictext\";\r\nimport GetColor, { Color } from \"./colorstyle\";\r\nimport GetStyle from \"./get-style\";\r\n\r\n\r\n\r\nexport default function BasicModal(props){\r\n  let child = props.child\r\n  const openTitle = props?.openTitle ?? \"null open title\"\r\n  \r\n\r\n  const [show, setShow] = useState(false);\r\n  const styles = StyleSheet.create({\r\n    modalView: {\r\n        flex: 1,\r\n        flexDirection:\"column\",\r\n        paddingHorizontal: 30,\r\n        margin: 20,\r\n        backgroundColor:GetColor(Color.Modal),\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n        width: 0,\r\n        height: 0\r\n      }\r\n  }\r\n});\r\n\r\n    return(\r\n      <View>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={show}\r\n          onRequestClose={() => {setShow(!show)}}>\r\n          {/* <View style={GetStyle(\"ReservationText\")} > */}\r\n            <View style={styles.modalView}>\r\n\r\n              <View style={{width:\"100%\", height:'100%'}}>\r\n                {child}\r\n              </View>\r\n              <View style={GetStyle(\"ReservationText\")}>\r\n                <BasicButton title={\"close\"} onPress={()=>{setShow(!show)}}/>\r\n              </View>\r\n\r\n            {/* </View> */}\r\n          </View>\r\n        </Modal>\r\n\r\n        <BasicButton title={openTitle} onPress={()=>{setShow(true)}}/>\r\n\r\n      </View>)\r\n      \r\n}\r\n\r\n\r\n\r\n","import { Activity } from \"../../classes-interfaces/activity\";\r\nimport BasicModal from \"../../SafariSolaceStyleTools/basicmodal\";\r\nimport BasicText from \"../../SafariSolaceStyleTools/basictext\";\r\nimport GetStyle from \"../../SafariSolaceStyleTools/get-style\";\r\n\r\nexport default function ActivityItem(props: Activity){\r\n\r\n    const {title, desc, startTime, endTime, location, status} = props;\r\n\r\n    function renderPage(){\r\n        return(<>\r\n            <BasicText style={GetStyle(\"BasicText\")} text={`Title: ${title}`}/>\r\n            <BasicText style={GetStyle(\"BasicText\")}text={`Description: ${desc}`}/>\r\n            <BasicText style={GetStyle(\"BasicText\")}text={`Start Time: ${new Date(startTime * 1000).toDateString()} At: ${new Date(startTime * 1000).toLocaleTimeString()}`}/>\r\n            <BasicText style={GetStyle(\"BasicText\")}text={`End Time: ${new Date((endTime + 604800) * 1000).toDateString()} At: ${new Date((endTime + 604800) * 1000).toLocaleTimeString()}`}/>\r\n            <BasicText style={GetStyle(\"BasicText\")}text={`Location: ${location}`}/>\r\n            <BasicText style={GetStyle(\"BasicText\")}text={`Status: ${status}`}/>\r\n        </>)\r\n    }\r\n\r\n    return(<>\r\n        <BasicModal child={renderPage()} openTitle={title}/>\r\n    </>)\r\n}","\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { ScrollView, View } from \"react-native\"\r\nimport { Activity } from \"../../classes-interfaces/activity\"\r\nimport httpHandler, { httphandlerInterface } from \"../../classes-interfaces/http-handler\"\r\nimport BasicText from \"../../SafariSolaceStyleTools/basictext\"\r\nimport GetStyle from \"../../SafariSolaceStyleTools/get-style\"\r\nimport ActivityItem from \"../children/activity-item\"\r\n\r\nexport default function ActivityView(){\r\n\r\n    // const activities: Activity[] = [\r\n    //     {\"id\":\"9d3411d2-8d2c-4813-b0ba-40eed59cf3cf\",\"title\":\"Ice Cream Social\",\"desc\":\"We all scream for ice cream!\",\"startTime\":1646772927,\"endTime\":1646772927,\"location\":\"Pool\",\"status\":\"On Schedule\"},\r\n    //     {\"id\":\"27a521d4-ca4e-4906-a1a9-4ef975815e35\",\"title\":\"Burger Buffet\",\"desc\":\"Create your own burger.\",\"startTime\":1646772927,\"endTime\":1646772927,\"location\":\"Roof Top\",\"status\":\"On Schedule\"},\r\n    //     {\"id\":\"34d4b13f-e400-4a99-9640-0f4b80777909\",\"title\":\"Axe Throwing\",\"desc\":\"Come chuck some axes.\",\"startTime\":1646772927,\"endTime\":1646772927,\"location\":\"Beach\",\"status\":\"On Schedule\"}\r\n    // ]\r\n\r\n    const handler: httphandlerInterface = new httpHandler(true);\r\n\r\n    let dummyactivities: Activity[] = [];\r\n    const [activitiesState, setActivitiesState] = useState(dummyactivities)\r\n    //const response: any = handler.getActivities();\r\n    useEffect(()=>{setter()},[])\r\n\r\n    async function setter(){\r\n        const response: any = await handler.getActivities();\r\n        const activity: Activity[] = response\r\n        setActivitiesState(activity)\r\n    }\r\n\r\n    //response?.length ? activities = [...response] : activities = [response];\r\n    \r\n    const activityItems = activitiesState.map(a => <ActivityItem key={a.id} {...a}/>)\r\n\r\n    return(<>\r\n        <BasicText style={GetStyle(\"BasicText\")} text={'Upcoming Events'}/>\r\n\r\n        <ScrollView>\r\n                {activityItems}\r\n        </ScrollView>\r\n    </>)\r\n}","//shows all the orders for a room\r\n\r\nimport { FlatList, View } from \"react-native\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport httpHandler from \"../../classes-interfaces/http-handler\";\r\nimport BasicButton from \"../../SafariSolaceStyleTools/basicbutton\";\r\nimport BasicText from \"../../SafariSolaceStyleTools/basictext\";\r\nimport v4 from \"uuid/v4\";\r\nimport { Offering, ServiceRequest } from \"../../classes-interfaces/room-service\";\r\nimport localhandler from \"../../classes-interfaces/localhandler\";\r\nimport GetStyle from \"../../SafariSolaceStyleTools/get-style\";\r\nimport { appContext } from \"../../classes-interfaces/app-context\";\r\n\r\nexport function RoomServiceOfferings() {\r\n  \r\n  const httpHandle = new httpHandler(true);\r\n  const localhandle =new localhandler()\r\n  const context = useContext(appContext);\r\n\r\n  const arr: Offering[] = []; \r\n  const [orders, setOrders] = useState(arr);\r\n\r\n  console.log(\"SDFASIFASBFIASB\",localhandle.getLocalOfferings());\r\n\r\n  useEffect(() => {\r\n    console.log('offerings display')\r\n    setOrders(localhandle.getLocalOfferings());\r\n  }, []);\r\n\r\n  function testArr(){\r\n    let arr1 = [];\r\n    for(let i = 0; i < 4; i++){\r\n      let obj : Offering = {\r\n        desc: \"Test Item\",\r\n        cost: 0\r\n      } \r\n      arr1.push(obj);\r\n    }\r\n    return arr1;\r\n  }\r\n\r\n  function addOffer(item) {\r\n    //httpHandle.postServiceRequest(props);\r\n    const currentRequests = localhandle.getUserOfferings()\r\n    currentRequests.push(item)\r\n    localhandle.setUserOfferings(currentRequests)\r\n//   function addOffer(props:Offering) {\r\n//     const serviceRequest: ServiceRequest = {\r\n//       id: v4(),\r\n//       room: context.room,\r\n//       created: (new Date()).getSeconds(),\r\n//       status: \"Ordered\",\r\n//       requestedOffering: [props],\r\n//     }\r\n//     console.log(\"hello\",serviceRequest)\r\n//     httpHandle.postServiceRequest(serviceRequest)\r\n\r\n\r\n  }\r\n\r\n  const style = GetStyle(\"OfferingsText\")\r\n  return (\r\n    <>\r\n      <BasicText style={GetStyle(\"TitleText\")}  text={\"All Room Service Offerings\"} />\r\n      <View style={GetStyle(\"FlatlistView\")}>\r\n          <FlatList\r\n            data={orders}\r\n            keyExtractor={(item) => v4()}\r\n            renderItem={({ item }) => {\r\n              return (\r\n                <>\r\n                  <BasicText style={style} text={item.desc} />\r\n                  <BasicText style={style} text={\"$\" + item.cost} />\r\n    \r\n                  <BasicButton onPress={()=>addOffer(item)} title={\"Add\"} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n","///shows all the orders for a room\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { FlatList } from \"react-native\";\r\nimport { View } from \"react-native\";\r\nimport BasicButton from \"../../SafariSolaceStyleTools/basicbutton\";\r\nimport BasicText from \"../../SafariSolaceStyleTools/basictext\";\r\nimport v4 from \"uuid/v4\";\r\nimport { Offering} from \"../../classes-interfaces/room-service\";\r\nimport localhandler from \"../../classes-interfaces/localhandler\";\r\nimport httpHandler from \"../../classes-interfaces/http-handler\";\r\nimport GetStyle from \"../../SafariSolaceStyleTools/get-style\";\r\nimport { appContext } from \"../../classes-interfaces/app-context\";\r\n\r\nexport function UserRoomServiceOrder() {\r\n    const httpHandle = new httpHandler(true);\r\n    const localHandle = new localhandler()\r\n    const context = useContext(appContext);\r\n    \r\n    const userOfferings = localHandle.getUserOfferings()\r\n\r\n    const [orders, setOrders] = useState(userOfferings);\r\n\r\n    useEffect(() => {\r\n      setOrders(userOfferings)\r\n    }),[]\r\n\r\n  function testArr(){\r\n    let arr1 = [];\r\n    for(let i = 0; i < 4; i++){\r\n      let obj : Offering = {\r\n        desc: `\"Item Description Here\"`, \r\n        cost: 0\r\n      } \r\n      arr1.push(obj);\r\n    }\r\n    return arr1;\r\n  }\r\n\r\n  function remove(itemIndex) {\r\n    let requestedOfferings = orders\r\n    requestedOfferings.length === 1 ? requestedOfferings = [] : requestedOfferings.splice(itemIndex,1)\r\n    setOrders([...requestedOfferings])\r\n    localHandle.setUserOfferings(requestedOfferings);\r\n\r\n  }\r\n\r\n  const style = GetStyle(\"OfferingsText\")\r\n  return (\r\n\r\n\r\n    <>\r\n        <BasicText style={GetStyle(\"TitleText\")} text={\"Your requested room service offerings\"} />\r\n        <View style={GetStyle(\"FlatlistView\")}>\r\n\r\n          <FlatList\r\n            data={orders}\r\n            keyExtractor={(item) => v4()}\r\n            renderItem={({ item, index }) => {\r\n              return (\r\n                <>\r\n                  <BasicText style={style} text={item.desc ?? \"Example\"} />\r\n                  <BasicText style={style} text={\"$\" + item.cost} />\r\n                  <BasicButton onPress={()=>remove(index)} title={\"Remove\"} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n        </View>\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { ActivityIndicator, View } from \"react-native\";\r\nimport { appContext } from \"../classes-interfaces/app-context\";\r\nimport httpHandler from \"../classes-interfaces/http-handler\";\r\nimport BasicText from \"../SafariSolaceStyleTools/basictext\";\r\n\r\n\r\n\r\nexport default function LoadingScreen(){\r\n    return(\r\n        <View>\r\n            <BasicText text={'Connecting to Server'}/><ActivityIndicator/>\r\n        </View>)\r\n}","import { useContext } from \"react\";\r\nimport { Platform } from \"react-native\";\r\nimport { themeContext } from \"./themecontext\";\r\n\r\n\r\n\r\n\r\nexport enum Theme{\r\n    default,\r\n    light,\r\n    dark,\r\n    hacker\r\n}\r\n\r\nexport enum Color{\r\n    Text,\r\n    textHeader,\r\n    textTitle,\r\n    Button,\r\n    ModalBackground,\r\n    ModalInner,\r\n    InputText,\r\n    primaryColor,\r\n    SecondaryColor,\r\n    TertiaryColor,\r\n}\r\n\r\nexport default function GetColor(colorType:Color){\r\n    const context = useContext(themeContext);\r\n    let returnColor = '#ffffff'\r\n\r\n    switch(context.theme){\r\n        case Theme.light:{\r\n            switch(colorType){\r\n                case Color.Text: { returnColor = 'ivory' ; break}\r\n                case Color.textHeader: { returnColor = 'ivory' ; break}\r\n                case Color.textTitle: { returnColor = 'ivory' ; break}\r\n                case Color.Button: { returnColor = 'chocolate' ; break}\r\n                case Color.InputText: { returnColor ='linen'; break}\r\n                case Color.ModalBackground: { returnColor = '#96D65E'}\r\n                case Color.ModalInner: { returnColor = '#ffffff'}\r\n                case Color.primaryColor: { returnColor = '#5B995A' ; break}\r\n                case Color.SecondaryColor: { returnColor = '#824026' ; break}\r\n                case Color.TertiaryColor: { returnColor = '#12FF5A' ; break}\r\n                default:      { returnColor = '#ffffff' ; break}\r\n            }\r\n        }\r\n        case Theme.dark:{\r\n            switch(colorType){\r\n                case Color.Text: { returnColor = 'ivory' ; break}\r\n                case Color.textHeader: { returnColor = 'ivory' ; break}\r\n                case Color.textTitle: { returnColor = 'ivory' ; break}\r\n                case Color.Button: { returnColor = 'chocolate' ; break}\r\n                case Color.InputText: { returnColor ='linen'; break}\r\n                case Color.ModalBackground: { returnColor = '#96D65E'}\r\n                case Color.ModalInner: { returnColor = '#ffffff'}\r\n                case Color.primaryColor: { returnColor = '#5B995A' ; break}\r\n                case Color.SecondaryColor: { returnColor = '#824026' ; break}\r\n                case Color.TertiaryColor: { returnColor = '#12FF5A' ; break}\r\n                default:      { returnColor = '#ffffff' ; break}\r\n            }\r\n        }\r\n        case Theme.hacker:{\r\n            switch(colorType){\r\n                case Color.Text: { returnColor = 'ivory' ; break}\r\n                case Color.textHeader: { returnColor = 'ivory' ; break}\r\n                case Color.textTitle: { returnColor = 'ivory' ; break}\r\n                case Color.Button: { returnColor = 'chocolate' ; break}\r\n                case Color.InputText: { returnColor ='linen'; break}\r\n                case Color.ModalBackground: { returnColor = '#96D65E'}\r\n                case Color.ModalInner: { returnColor = '#ffffff'}\r\n                case Color.primaryColor: { returnColor = '#5B995A' ; break}\r\n                case Color.SecondaryColor: { returnColor = '#824026' ; break}\r\n                case Color.TertiaryColor: { returnColor = '#12FF5A' ; break}\r\n                default:      { returnColor = '#ffffff' ; break}\r\n            }\r\n        }\r\n        default:{\r\n            switch(colorType){\r\n                case Color.Text: { returnColor = 'ivory' ; break}\r\n                case Color.textHeader: { returnColor = 'ivory' ; break}\r\n                case Color.textTitle: { returnColor = 'ivory' ; break}\r\n                case Color.Button: { returnColor = 'chocolate' ; break}\r\n                case Color.InputText: { returnColor ='linen'; break}\r\n                case Color.ModalBackground: { returnColor = '#96D65E'}\r\n                case Color.ModalInner: { returnColor = '#ffffff'}\r\n                case Color.primaryColor: { returnColor = '#5B995A' ; break}\r\n                case Color.SecondaryColor: { returnColor = '#824026' ; break}\r\n                case Color.TertiaryColor: { returnColor = '#12FF5A' ; break}\r\n                default:      { returnColor = '#ffffff' ; break}\r\n            }\r\n        }\r\n    }\r\n    if(Platform.OS == \"android\"){ return `${returnColor }`}\r\n    else return returnColor \r\n\r\n}\r\n\r\n\r\nexport function shadowRadius(){\r\n    const context = useContext(themeContext);\r\n    switch(context.theme){\r\n        case Theme.light:   {return 5}\r\n        case Theme.dark:    {return 5}\r\n        case Theme.hacker:  {return 1}\r\n        default:            {return 5}\r\n    }\r\n\r\n}\r\n\r\nexport function borderRadius(){\r\n    const context = useContext(themeContext);\r\n    switch(context.theme){\r\n        case Theme.light:   {return 10}\r\n        case Theme.dark:    {return 10}\r\n        case Theme.hacker:  {return 2}\r\n        default:            {return 10}\r\n    }\r\n\r\n}\r\n\r\nexport function paddingRadius(){\r\n    const context = useContext(themeContext);\r\n    switch(context.theme){\r\n        case Theme.light:   {return 5}\r\n        case Theme.dark:    {return 5}\r\n        case Theme.hacker:  {return 0}\r\n        default:            {return 5}\r\n    }\r\n}\r\n\r\nexport function margin(){\r\n    const context = useContext(themeContext);\r\n    switch(context.theme){\r\n        case Theme.light:   {return 5}\r\n        case Theme.dark:    {return 5}\r\n        case Theme.hacker:  {return 2}\r\n        default:            {return 5}\r\n    }\r\n}\r\n","import { View, Image } from \"react-native\";\r\nimport BasicText, { TextType } from '../../SafariSolaceStyleTools/basictext'\r\nimport BasicInputText from '../../SafariSolaceStyleTools/basicinputtext'\r\nimport BasicButton from '../../SafariSolaceStyleTools/basicbutton'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport httpHandler, { httphandlerInterface } from \"../../classes-interfaces/http-handler\";\r\nimport LoadingScreen from \"../loadingScreen\";\r\nimport { appContext, AppContextInterface } from \"../../classes-interfaces/app-context\";\r\nimport GetStyle from \"../../SafariSolaceStyleTools/get-style\";\r\n\r\n\r\nexport default function ReservationLogin(props){\r\n    const [reservationID, setReservationID] = useState('');\r\n    const [firstTry, setFirstTry] = useState(false);\r\n    const [showError, setShowError] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [pageIndex, setPage] = useState(0)\r\n\r\n    const HTTP:httphandlerInterface = new httpHandler(true)\r\n    const context: AppContextInterface = useContext(appContext)\r\n\r\n    //useEffect(()=>{context.setPage(1)}, [context.reservationData, context.userOfferings])\r\n    /**this should be used to check if the input reservation is valid*/\r\n    function reservationCheck(){\r\n        if(!firstTry){setFirstTry(true)};\r\n        return Boolean(reservationID.length > 0);\r\n    }\r\n    async function tryLoginHTTP(){\r\n        if(!firstTry){setFirstTry(true)}\r\n        try {\r\n            console.log(\"try login pressed\");\r\n            setShowError(false);\r\n\r\n            await HTTP.syncApp(reservationID)\r\n            context.setPage(1)\r\n            //Set context State Here ...\r\n            //switch page ...\r\n        } catch (error) {\r\n            console.log(\"sync app failed\",error)\r\n            setShowError(true);\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    function TryLoginButton(){\r\n        return(<View style={GetStyle(\"LoginButtonView\")}><BasicButton title={\"Login with Reservation\"} onPress={tryLoginHTTP}/></View>)\r\n    }\r\n\r\n    function InvalidWarning(){\r\n        return <><TryLoginButton/></>\r\n        if(!firstTry){ return <><TryLoginButton/></>}\r\n        else if(!showError && reservationCheck()){ return <><TryLoginButton/></>}\r\n        else{return <><BasicText text={\"You may have entered an invalid URL, if not please contact a manager\"}/> </>}\r\n    }\r\n\r\n    // function Display(){\r\n    //     switch(isLoading){\r\n    //         case true:{return <LoadingScreen/>}\r\n    //         case false:{\r\n    //             return (\r\n    //             <View>\r\n    //                 <BasicText text={\"Welcome To Safari SolaceStyle Resorts\"} textType ={TextType.Title}/>\r\n    //                 <BasicText text={\"Please Enter your Reservation ID\"} textType ={TextType.Header}/>\r\n    //                 <BasicInputText value = {reservationID} placeholder={\"1234\"} onChangeText={setReservationID} />\r\n    //                 <InvalidWarning />\r\n    //             </View>)\r\n    //         }\r\n\r\n    //     }\r\n    // }\r\n    return(\r\n        \r\n        <View style={GetStyle('MainView')}>\r\n            <Image style={{height:64*2,width:64*2, margin:10, alignSelf:'center'}} source={ require('../../assets/Sale.png') }/>\r\n            <BasicText style={GetStyle(\"TitleText\")} text={\"Welcome To Safari Solace Resorts\"} />\r\n            <BasicText style={GetStyle(\"TitleText\")} text={\"Please Enter your Reservation ID\"} />\r\n            <BasicInputText style={GetStyle(\"BasicInputText\")} value = {reservationID} placeholder={\"Your ID\"} onChangeText= {setReservationID} />\r\n            <InvalidWarning/>\r\n        </View>\r\n    )\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { StatusBar, StyleSheet, Text, View, Image, Dimensions } from 'react-native';\r\nimport { appContext, AppContextInterface } from './classes-interfaces/app-context';\r\nimport ProblemReport from './components/page/problem-report';\r\nimport { themeContext, ThemeContextInterface } from './SafariSolaceStyleTools/themecontext';\r\nimport ReservationHomePage from './components/page/reservation-homepage';\r\nimport NavBar from './components/children/nav-bar';\r\nimport ActivityView from './components/page/activity-view';\r\nimport Reservation from './classes-interfaces/Reservation';\r\nimport { Offering, ServiceRequest } from './classes-interfaces/room-service';\r\nimport { RoomServiceOfferings } from './components/page/all-roomSrv-view';\r\nimport { UserRoomServiceOrder } from './components/page/user-roomSrv';\r\nimport LoadingScreen from './components/loadingScreen';\r\nimport { Activity } from './classes-interfaces/activity';\r\nimport GetStyle from './SafariSolaceStyleTools/get-style';\r\nimport { Theme } from './SafariSolaceStyleTools/styleconfig';\r\nimport ReservationLogin from './components/page/login-page';\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [statetheme, setTheme] = useState(Theme.default);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n\r\n\r\n  // dummy values\r\n  const dummyReservation:Reservation={\r\n    id: 'dude',\r\n    checkIn: 0,\r\n    checkOut: 0,\r\n    owner: 'me',\r\n    room: '404'\r\n  }\r\n\r\n// const dummyOffering1:Offering[] =[]\r\n//   const dummyOffering2:ServiceRequest={\r\n//     id: '',\r\n//     room: '',\r\n//     created: 0,\r\n//     status: 'Ordered',\r\n//     requestedOffering: []\r\n//   }\r\n\r\n// const dummyOffering2 : Offering[]=\r\n// [{\r\n//     desc: \"pizza in bed\",\r\n//     cost: 12\r\n// }]\r\n\r\n  const [reservation, setReservation] = useState<Reservation>(dummyReservation);\r\n  const [serverOfferingList, setServerOfferingList] = useState<Offering[]>();\r\n  const [userServerOffering, setUserServerOffering] = useState<ServiceRequest[]>();\r\n  const [activityList, setActivityList] = useState<Activity[]>();\r\n\r\n\r\n  const initContext:AppContextInterface = {\r\n    reservationData: reservation,\r\n    setReservationData: setReservation,\r\n    serverOfferings: serverOfferingList,\r\n    setServerOfferings: setServerOfferingList,\r\n    userOfferings: userServerOffering,\r\n    setUserOfferings: setUserServerOffering,\r\n    availableActivities: activityList,\r\n    setAvailableActivities: setActivityList,\r\n    setPage:setPageIndex\r\n  }\r\n  const themeContextObject:ThemeContextInterface = {theme:statetheme,setTheme:setTheme}\r\n\r\n  function ShowNavBar(){\r\n    return <NavBar navFunc={setPageIndex}/>\r\n  }\r\n\r\n\r\n  function SwitchPage(){\r\n    switch(pageIndex){\r\n      case                              0:{return(<ReservationLogin setPageIndex={setPageIndex}/>)}\r\n      case /*Home page*/                1:{return(<><ShowNavBar/><ReservationHomePage/></>)}\r\n      case /*All Events*/               2:{return(<><ShowNavBar/><UserRoomServiceOrder/></>)}\r\n      case /*All Room Service*/         3:{return(<><ShowNavBar/><RoomServiceOfferings/></>)}\r\n      case /*All Events*/               4:{return(<><ShowNavBar/><ActivityView/></>)}\r\n      case /*Problem Report*/           5:{return(<><ShowNavBar/><ProblemReport/></>)}\r\n      default :                           {return<LoadingScreen/>}\r\n    }\r\n  }\r\n\r\n  const HeightScale = Dimensions.get('window').height\r\n  console.log(\"🚀 ~ file: RealApp.tsx ~ line 87 ~ RealApp ~ HeightScale\", HeightScale)\r\n  const WidthScale = Dimensions.get('window').width\r\n  console.log(\"🚀 ~ file: RealApp.tsx ~ line 89 ~ RealApp ~ WidthScale\", WidthScale)\r\n  return (\r\n    <View style={{width:'100%',height:'100%',justifyContent:\"center\", alignSelf:\"center\", backgroundColor:'black'}}>\r\n      <appContext.Provider value = {initContext}>\r\n        <themeContext.Provider value = { themeContextObject }>\r\n          <SwitchPage/>\r\n        </themeContext.Provider>\r\n      </appContext.Provider>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: '#999',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n// });\r\n"],"sourceRoot":""}